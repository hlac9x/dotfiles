
alias onedrive="cd /Users/hlac/Library/CloudStorage/OneDrive-Personal"
#Show Current Puclis IP
alias myip='curl http://ipecho.net/plain; echo'

############################### CUSTOM ###############################
alias upwork="cd /Users/hoan.lac/Library/CloudStorage/OneDrive-Personal/Hoan\'s\ Data/Company/Upwork"
alias dfimage="docker run -v /var/run/docker.sock:/var/run/docker.sock --rm chenzj/dfimage"
alias vang='curl -s https://sjc.com.vn/giavang/textContent.php | rg -A2 10L | rg -o ".{0,6},000<" | sed "s/<//g"'

#Edit aliases file
alias aliases='code ~/.aliases'
alias awsconfig="code ~/.aws/credentials"
alias sshconfig='code ~/.ssh'

alias flushdns='sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder'
############################### ZSH ###############################

alias zshconfig='code ~/.zshrc'
alias reload="source $HOME/.zshrc"
alias v="vim"

############################### TERRAFORM ###############################
alias tf="terraform"


############################### K8S ###############################
alias kx="kubectx"
alias kubeconfig='code ~/.kube'

############################### GIT ###############################
alias g='git'
alias ga='git add .'
alias gb='git branch'
alias gp='git pull'
alias gps='git push'
alias gc='git commit -m'
alias gc='git checkout'
alias gcb='git checkout -b'
alias gcm='git checkout master'
alias gm='git merge'
alias glog='git log --oneline --decorate --graph'

############################### AXON ###############################
alias axon="cd /Users/hlac/Library/CloudStorage/OneDrive-AxonEnterprise"
# password=eval"$(op read "op://Axon/Okta/password")"

#VPN
# Viscocity
alias dv1='vpn dv1'
alias ag1='vpn ag1'
alias us2='vpn us2'
alias us4='vpn us4'
alias us5='vpn us5'
alias us6='vpn us6'
alias eu1='vpn eu1'
alias nl1='vpn nl1'
alias la1='vpn la1'
alias in1='vpn in1'

# eval "$(op completion zsh)"; compdef _op op
alias 1cli='eval $(security find-generic-password -w -s '1password' -a 'david.jony106@gmail.com' | op signin)'

vpn () {
( op read "op://Axon/$1/password" | pbcopy
  osascript << EOF
  tell application "System Events"
      repeat until (exists window 1 of application process "Viscosity")
          delay 0.05
      end repeat
      keystroke "v" using command down
  end tell
EOF
) &

  osascript << EOF
  tell application "Viscosity"
      connect "tvs-$1"
  end tell
EOF
}

axlogin () {
  deployment=$1

if [[ -z "$deployment" ]] ; then
  echo "ERROR: Invalid parameters"
  echo "  $0 deployment"
  echo "e.g."
  echo "  $0 ag1"
  exit 1
fi

case $deployment in
  ag1)
    AZURE_CLOUD=AzureUSGovernment
    AZURE_SUBSCRIPTION=4d47ec28-1799-4c7b-9e34-81300079de6b
  ;;
  us1)
    AZURE_CLOUD=AzureUSGovernment
    AZURE_SUBSCRIPTION=f1f15309-3409-4c52-b7de-31cb8714db97
  ;;
  us3)
    AZURE_CLOUD=AzureUSGovernment
    AZURE_SUBSCRIPTION=3b245bfd-1493-463e-95f3-667e3d155d73
  ;;
  au1)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=faeed5ba-1af5-482d-a3fd-1fbf0914b812
  ;;
  ca1)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=e3bdb0c4-6ac6-4bc7-bb96-e0c8d46863af
  ;;
  eu1)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=b18521cb-9832-4f5c-828a-e8e117818cb5
  ;;
  la1)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=bedc3b52-9331-4e13-8022-414b4c58e484
  ;;
  nl1)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=3bd0cd16-cd7d-49f0-a34e-dabc4f58b03c
  ;;
  uk2)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=417ff278-c8e4-4c94-843d-905364f236a7
  ;;
  us2)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=be4fa4c1-8513-4755-95f9-a8627814ca36
  ;;
  us4)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=787da577-d660-41c4-9bdd-8896597ccf0a
  ;;
  us7|dv1)
    AZURE_CLOUD=AzureCloud
    AZURE_SUBSCRIPTION=fa9b6c3f-1af0-4bbb-bd8d-7dfd0e33e3fa
  ;;
  *)
    echo "Deployment $deployment is unknown."
    exit 255
    ;;
esac

export AZURE_CLOUD
export AZURE_SUBSCRIPTION
az cloud set -n "$AZURE_CLOUD"

if az account get-access-token > /dev/null ; then
  echo "Azure Access Token retrieved, no need to login"
else
  echo "No Azure Access Token retrieved, triggering login"
  az login
  az account set -s "$AZURE_SUBSCRIPTION"
  az account list -o table
fi
}

# ssh
sshi () {
  case "$1" in
    "dv1") prefix="qus1uw2"
      ;;
    "ag1") prefix="qag1ge1"
      ;;
    "us2") prefix="sus2uw1"
      ;;
    "eu1") prefix="peu1ew1"
      ;;
    "la1") prefix="pla1bs1"
      ;;
    "nl1") prefix="pnl1we1"
      ;;
    "us4") prefix="pus4uw2"
      ;;
    "us5") prefix="qus5uw2"
      ;;
    "*")
      echo "Invalid env: $1"
      exit 1
      ;;
  esac

  [[ -z "$prefix" ]] && echo "Missing env" && exit 1

  vm_type="$2"
  if [[ -z "$vm_type" ]]; then
    vm_name="lnoc001"
  else
    if [[ "$vm_type" =~ ^l[a-z]{3}$ ]]; then
      vm_name="${vm_type}001"
    elif [[ "$vm_type" =~ ^l[a-z]{3}[0-9]{3}$ ]]; then
      vm_name="$vm_type"
    elif [[ "$vm_type" =~ ^l[a-z]{3}[0-9]$ ]]; then
      vm_name="${vm_type:0:(-1)}00${vm_type:(-1)}"
    else
      echo "Invalid vm name: $vm_type"
      exit 1
    fi
  fi

  if [[ "$1" = "dv1"  && "$vm_name" =~ ^lbox[0-9]{3}$ ]]; then
    full_vm_name="dus1uw2${vm_name}"
  else
    full_vm_name="$prefix$vm_name"
  fi

  ssh $full_vm_name
}

stop_dns_hell() {
  sudo launchctl unload /Library/LaunchDaemons/com.greenboxal.dnsheaven.plist
  sudo rm -f /etc/resolv.conf
  sudo ln -s /var/run/resolv.conf /etc/resolv.conf
}

start_dns_hell() {
  sudo rm -f /etc/resolv.conf
  sudo launchctl load /Library/LaunchDaemons/com.greenboxal.dnsheaven.plist
}


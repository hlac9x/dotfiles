cd keyvault
git commit -am "fix private dns zone issue"
git commit -am "updaete keyvault"
az keyvault purge --name ballast-dev-infra-kv
git commit -am "update keyvault name"
git commit -am "update endpoint"
git commit -am "update endpoint configure"
cd ../acr
git commit -am "update service endpoint"
git commit -am "update lifecycle"
terragrunt run-all apply --auto-approve
cd postgresql
git commit -am "update ip"
terragrunt run-all apply 
cd aks-cluster
git rm --cached modules/.DS_Store
rm -rf .DS_Store
git rm -rf modules/.DS
rm -f modules/.DS_Store
git commit -am "init aks"
C
terragrunt force-unlock --id 8dc37f1c-5ce8-4603-5d46-bdd5877e385c
terragrunt force-unlock 8dc37f1c-5ce8-4603-5d46-bdd5877e385c
git commit -am "update cluster configure"
git commit -am "update default nodepool"
cd ../postgresql
cd ../aks-cluster/
git commit -am "update nodepool"
git commit -am "update tags"
go install github.com/Azure/aztfy@latest
go install github.com/Azure/aztfexport@latest
brew install aztfexport
aztfexport -v
az login --tenant 54f94149-fc30-41b1-9c5c-bff1bd1f3648
az group show -n rg-pbi-embedded-app-dev
rm -f pbi
mkdir pbi
code pbi
cd pbi
rm -rf pbi
mkdir temp
cd temp
pack build ballast-ui --path . --builder paketobuildpacks/builder-jammy-full
code ballast-k8s
terragrunt run-all destroy --auto-approve
cd layer1
terragrunt run-all plan
git commit -am "update folder name"
cd ../layer3/aks-cluster
az account set --subscription c87b3c8e-3e15-456d-ba22-95ee87b9ea32
cd ../../layer1/topology
cd ../../layer3/devops-cluster
qq
terragrunt unlock-force f5a2e6e4-ee87-d34e-d2d9-36790f3b5c33
terragrunt force-unlock f5a2e6e4-ee87-d34e-d2d9-36790f3b5c33
az aks get-credentials --resource-group ballast-dev-devops-aks-rg --name ballast-dev-devops-aks --overwrite-existing
nslookup devops-5hefw8wm.af22283d-91d3-46a4-a953-1e22b13157f5.privatelink.westus3.azmk8s.io
git commit -am "cluster bootstraps"
git commit -am "update peering"
cd modules/k8s/nginx-ingress/manifests
cat ./manifest/values.yaml
cat ../manifest/values.yaml
cat ./manifests/values.yaml
git commit -am "update values"
cd layer3
cd .././/
git commit -am "update "
cd ../../../layer1
terragrunt run-all destroy 
git commit -am "add outpout"
cd ../../../../
cd infra/prod
git commit -am "update rg name"
cd infra/prod/layer1/main-registry
cd ../core-keyvault
cd main-keyvault
cd main-registry
cd registry
git commit -am "refactor"
export KUBE_CONFIG_PATH=~/.kube
cat ~/.kube/config
az ad sp show --id  ac471dc1-baff-4728-b07a-5e91442f55c1
cd ba
cd devops-cluster
q
az aks get-credentials --resource-group ballast-prod-devops-aks-rg --name ballast-prod-devops-aks --overwrite-existing
a
../
cd layer1/keyvault
cd prod/layer3/devops-cluster/bootstraps
cd modules/cluster-bootstraps
../Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps/chart
../Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps
/Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps../
../../Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps
cd ../../Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps
cd /Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps/../
cd /Users/hoanlac/repos/ballastlabs/ballast-tf/modules/cluster-bootstraps/../charts/raw
cd -
git commit -am "update bootstraps"
git commit -am "update role"
git commit -am "add cert-manager"
nslookup ballast-prod-main-kv.vault.azure.net
nslookup private.ballast.prod.main.kv.privatelink.vaultcore.azure.net
mkdir pbi-embedded-app2
cd pbi-embedded-app2
az account set --subscription 8ff03775-e8da-4509-8e2b-e55978350552
aztfexport resource-group  rg-pbi-embedded-app-dev
terraform apply --auto-approve
kubectl set env daemonset aws-node -n kube-system ENABLE_POD_ENI=false
kubectl describe daemonset aws-node --namespace kube-system | grep Image | cut -d "/" -f 2
kubectl set env daemonset aws-node -n kube-system DISABLE_TCP_EARLY_DEMUX=false
terraform init --migrate-state
chmod -x count.sh
chmod 777 count.sh
./count.sh --instance-type m5.large
kubectl describe daemonset aws-node --namespace kube-system | grep amazon-k8s-cni: | cut -d : -f 3\

./count.sh --instance-type m5.large --cni-version v1.18.1-eksbuild.1
./count.sh --instance-type m5.large --cni-version 1.18.1-eksbuild.1
./count.sh --instance-type t2.small --cni-version 1.18.1-eksbuild.1
./count.sh --instance-type t2.small --cni-version 1.18.1-eksbuild.1 --profile pocket-dev
cd ../registry
git commit -am "add private dns zone"
az login --tenant 6873769a-8838-4672-94bd-f377d4e0609f
cd keyvault/main
cd ../app
cd ../../..
cd layer3/devops-cluster/base
gá»ƒ»p
gitad
docker
docker pull ghcr.io/appscode/config-syncer:v0.14.0
docker pull ghcr.io/appscode/config-syncer:v0.14.7
docker pull ghcr.io/appscode/config-syncer:0.15.0
docker pull ghcr.io/appscode/config-syncer:v0.15.0-ent
docker pull ghcr.io/appscode/config-syncer:v0.15.0
docker pull appscode/kubed:v0.13.1
git commit -am "add syncer"
git commit -am "add external-dns"
git commit -am "add argocd"
telnet 10.0.16.100
telnet 10.0.16.100 443
telnet argocd.devops.ballastlabs.com
telnet argocd.devops.ballastlabs.com 443
git diff
git remote set-url origin git@ssh.dev.azure.com:v3/marlin-equity-partners/MEP/ballast-k8s
''
nslookup argocd.devops.ballastlabs.com 1.1.1.1
nslookup argocd.devops.ballastlabs.com
git commit -am "update domain name"
nslookup https://argocd.devops.prod.ballastlabs.com/
nslookup argocd.devops.prod.ballastlabs.com/
nslookup argocd.devops.prod.ballastlabs.com
git commit -am "update argocd"
git commit -am "update nginx"
git commit -am "add argocd project"
cd infra/prod/layer3/devops-cluster/bootstraps
git checkout -b prod
cd devops
helm create external-secrets-resources
tccutil reset Accessibility com.surteesstudios.Bartender; tccutil reset ScreenCapture com.surteesstudios.Bartender; \
tccutil reset Accessibility com.surteesstudios.Bartender-setapp; tccutil reset ScreenCapture com.surteesstudios.Bartender-setapp
git commit -am "refactor secret"
git commit -am "add more keyvault"
git commit -am "update config"
git commit -am "update argocd secret"
git commit -am "add dex"
git commit -am "update repo path"
az aks get-credentials --resource-group ballast-prod-app-aks-rg --name ballast-prod-app-aks --admin --overwrite-existing
git commit -am "add new license"
az aks get-credentials --resource-group ballast-prod-devops-aks-rg --name ballast-prod-devops-aks --admin --overwrite-existing
git commit -am "update bootstrap rg"
nslookup dex.app.prod.ballastlabs.com
git commit -am "init new á»ƒ©na"
git commit -am "init new infra"
git commit --allow-empty -m "init new infra"
brew uninstall --ignore-dependencies certifi cryptography argocd aztfexport buildpacks/tap/pack
brew untap terraform-docs/ta
brew uninstall terraform-docs
brew untap terraform-docs/tap
git commit -am "add terraform-docs"
cd modules/azure/acr
terraform-docs markdown table --output-file README.md
terraform-docs markdown table --output-file README.md --output-mode inject .
find . -type d ! -path . | while read -r dir; do\
  echo "Processing directory: $dir"\
  (cd "$dir" && terraform-docs markdown table --output-file README.md --output-mode inject .)\
done
git commit -am "add README"
cd infra/prod/layer2/postgresql
git commit -am "add db"
git commit -am "customer helm vaule"
cd ../../layer3/devops-cluster/bootstraps
git commit -am "custom helm vaule"
git commit -am "custome helm vaule"
git commit -am "custom value"
git commit -am "update private dns links"
cd ../../../layer2/postgresql
git commit -am "update links"
cat Downloads/DigiCertGlobalRootCA.crt
cat Downloads/Microsoft\ RSA\ Root\ Certificate\ Authority\ 2017.crt
openssl x509 -in Downloads/DigiCertGlobalRootCA.crt -out certificate.pem -outform PEM
cat Downloads/DigiCertTLSRSA4096RootG5.crt.pem
echo -n "-----BEGIN CERTIFICATE-----\
MIIFZjCCA06gAwIBAgIQCPm0eKj6ftpqMzeJ3nzPijANBgkqhkiG9w0BAQwFADBN\
MQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xJTAjBgNVBAMT\
HERpZ2lDZXJ0IFRMUyBSU0E0MDk2IFJvb3QgRzUwHhcNMjEwMTE1MDAwMDAwWhcN\
NDYwMTE0MjM1OTU5WjBNMQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQs\
IEluYy4xJTAjBgNVBAMTHERpZ2lDZXJ0IFRMUyBSU0E0MDk2IFJvb3QgRzUwggIi\
MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCz0PTJeRGd/fxmgefM1eS87IE+\
ajWOLrfn3q/5B03PMJ3qCQuZvWxX2hhKuHisOjmopkisLnLlvevxGs3npAOpPxG0\
2C+JFvuUAT27L/gTBaF4HI4o4EXgg/RZG5Wzrn4DReW+wkL+7vI8toUTmDKdFqgp\
wgscONyfMXdcvyej/Cestyu9dJsXLfKB2l2w4SMXPohKEiPQ6s+d3gMXsUJKoBZM\
pG2T6T867jp8nVid9E6P/DsjyG244gXazOvswzH016cpVIDPRFtMbzCe88zdH5RD\
nU1/cHAN1DrRN/BsnZvAFJNY781BOHW8EwOVfH/jXOnVDdXifBBiqmvwPXbzP6Po\
sMH976pXTayGpxi0KcEsDr9kvimM2AItzVwv8n/vFfQMFawKsPHTDU9qTXeXAaDx\
Zre3zu/O7Oyldcqs4+Fj97ihBMi8ez9dLRYiVu1ISf6nL3kwJZu6ay0/nTvEF+cd\
Lvvyz6b84xQslpghjLSR6Rlgg/IwKwZzUNWYOwbpx4oMYIwo+FKbbuH2TbsGJJvX\
KyY//SovcfXWJL5/MZ4PbeiPT02jP/816t9JXkGPhvnxd3lLG7SjXi/7RgLQZhNe\
XoVPzthwiHvOAbWWl9fNff2C+MIkwcoBOU+NosEUQB+cZtUMCUbW8tDRSHZWOkPL\
tgoRObqME2wGtZ7P6wIDAQABo0IwQDAdBgNVHQ4EFgQUUTMc7TZArxfTJc1paPKv\
TiM+s0EwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcN\
AQEMBQADggIBAGCmr1tfV9qJ20tQqcQjNSH/0GEwhJG3PxDPJY7Jv0Y02cEhJhxw\
GXIeo8mH/qlDZJY6yFMECrZBu8RHANmfGBg7sg7zNOok992vIGCukihfNudd5N7H\
PNtQOa27PShNlnx2xlv0wdsUpasZYgcYQF+Xkdycx6u1UQ3maVNVzDl92sURVXLF\
O4uJ+DQtpBflF+aZfTCIITfNMBc9uPK8qHWgQ9w+iUuQrm0D4ByjoJYJu32jtyoQ\
REtGBzRj7TG5BO6jm5qu5jF49OokYTurWGT/u4cnYiWB39yhL/btp/96j1EuMPik\
AdKFOV8BmZZvWltwGUb+hmA+rYAQCd05JS9Yf7vSdPD3Rh9GOUrYU9DzLjtxpdRv\
/PNn5AeP3SYZ4Y1b+qOTEZvpyDrDVWiakuFSdjjo4bq9+0/V77PnSIMx8IIh47a+\
p6tv75/fTM8BuGJqIz3nCU2AG3swpMPdB380vqQmsvZB6Akd4yCYqjdP//fx4ilw\
MUc/dNAUFvohigLVigmUdy7yWSiLfFCSCmZ4OIN1xLVaqBHG5cGdZlXPU8Sv13WF\
qUITVuwhd4GTWgzqltlJyqEI8pc7bZsEGCREjnwB8twl2F6GmrE52/WRMmrRpnCK\
ovfepEWFJqgejF0pW8hL2JpqA15w8oVPbEtoL8pU9ozaMv7Da4M/OMZ+\
-----END CERTIFICATE-----" | base64
echo "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZaakNDQTA2Z0F3SUJBZ0lRQ1BtMGVLajZmdHBxTXplSjNuelBpakFOQmdrcWhraUc5dzBCQVF3RkFEQk4KTVFzd0NRWURWUVFHRXdKVlV6RVhNQlVHQTFVRUNoTU9SR2xuYVVObGNuUXNJRWx1WXk0eEpUQWpCZ05WQkFNVApIRVJwWjJsRFpYSjBJRlJNVXlCU1UwRTBNRGsySUZKdmIzUWdSelV3SGhjTk1qRXdNVEUxTURBd01EQXdXaGNOCk5EWXdNVEUwTWpNMU9UVTVXakJOTVFzd0NRWURWUVFHRXdKVlV6RVhNQlVHQTFVRUNoTU9SR2xuYVVObGNuUXMKSUVsdVl5NHhKVEFqQmdOVkJBTVRIRVJwWjJsRFpYSjBJRlJNVXlCU1UwRTBNRGsySUZKdmIzUWdSelV3Z2dJaQpNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN6MFBUSmVSR2QvZnhtZ2VmTTFlUzg3SUUrCmFqV09McmZuM3EvNUIwM1BNSjNxQ1F1WnZXeFgyaGhLdUhpc09qbW9wa2lzTG5MbHZldnhHczNucEFPcFB4RzAKMkMrSkZ2dVVBVDI3TC9nVEJhRjRISTRvNEVYZ2cvUlpHNVd6cm40RFJlVyt3a0wrN3ZJOHRvVVRtREtkRnFncAp3Z3NjT055Zk1YZGN2eWVqL0Nlc3R5dTlkSnNYTGZLQjJsMnc0U01YUG9oS0VpUFE2cytkM2dNWHNVSktvQlpNCnBHMlQ2VDg2N2pwOG5WaWQ5RTZQL0RzanlHMjQ0Z1hhek92c3d6SDAxNmNwVklEUFJGdE1iekNlODh6ZEg1UkQKblUxL2NIQU4xRHJSTi9Cc25adkFGSk5ZNzgxQk9IVzhFd09WZkgvalhPblZEZFhpZkJCaXFtdndQWGJ6UDZQbwpzTUg5NzZwWFRheUdweGkwS2NFc0RyOWt2aW1NMkFJdHpWd3Y4bi92RmZRTUZhd0tzUEhURFU5cVRYZVhBYUR4ClpyZTN6dS9PN095bGRjcXM0K0ZqOTdpaEJNaThlejlkTFJZaVZ1MUlTZjZuTDNrd0padTZheTAvblR2RUYrY2QKTHZ2eXo2Yjg0eFFzbHBnaGpMU1I2UmxnZy9Jd0t3WnpVTldZT3dicHg0b01ZSXdvK0ZLYmJ1SDJUYnNHSkp2WApLeVkvL1NvdmNmWFdKTDUvTVo0UGJlaVBUMDJqUC84MTZ0OUpYa0dQaHZueGQzbExHN1NqWGkvN1JnTFFaaE5lClhvVlB6dGh3aUh2T0FiV1dsOWZOZmYyQytNSWt3Y29CT1UrTm9zRVVRQitjWnRVTUNVYlc4dERSU0haV09rUEwKdGdvUk9icU1FMndHdFo3UDZ3SURBUUFCbzBJd1FEQWRCZ05WSFE0RUZnUVVVVE1jN1RaQXJ4ZlRKYzFwYVBLdgpUaU0rczBFd0RnWURWUjBQQVFIL0JBUURBZ0dHTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOCkFRRU1CUUFEZ2dJQkFHQ21yMXRmVjlxSjIwdFFxY1FqTlNILzBHRXdoSkczUHhEUEpZN0p2MFkwMmNFaEpoeHcKR1hJZW84bUgvcWxEWkpZNnlGTUVDclpCdThSSEFObWZHQmc3c2c3ek5Pb2s5OTJ2SUdDdWtpaGZOdWRkNU43SApQTnRRT2EyN1BTaE5sbngyeGx2MHdkc1VwYXNaWWdjWVFGK1hrZHljeDZ1MVVRM21hVk5WekRsOTJzVVJWWExGCk80dUorRFF0cEJmbEYrYVpmVENJSVRmTk1CYzl1UEs4cUhXZ1E5dytpVXVRcm0wRDRCeWpvSllKdTMyanR5b1EKUkV0R0J6Umo3VEc1Qk82am01cXU1akY0OU9va1lUdXJXR1QvdTRjbllpV0IzOXloTC9idHAvOTZqMUV1TVBpawpBZEtGT1Y4Qm1aWnZXbHR3R1ViK2htQStyWUFRQ2QwNUpTOVlmN3ZTZFBEM1JoOUdPVXJZVTlEekxqdHhwZFJ2Ci9QTm41QWVQM1NZWjRZMWIrcU9URVp2cHlEckRWV2lha3VGU2Rqam80YnE5KzAvVjc3UG5TSU14OElJaDQ3YSsKcDZ0djc1L2ZUTThCdUdKcUl6M25DVTJBRzNzd3BNUGRCMzgwdnFRbXN2WkI2QWtkNHlDWXFqZFAvL2Z4NGlsdwpNVWMvZE5BVUZ2b2hpZ0xWaWdtVWR5N3lXU2lMZkZDU0NtWjRPSU4xeExWYXFCSEc1Y0dkWmxYUFU4U3YxM1dGCnFVSVRWdXdoZDRHVFdnenFsdGxKeXFFSThwYzdiWnNFR0NSRWpud0I4dHdsMkY2R21yRTUyL1dSTW1yUnBuQ0sKb3ZmZXBFV0ZKcWdlakYwcFc4aEwySnBxQTE1dzhvVlBiRXRvTDhwVTlvemFNdjdEYTRNL09NWisKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==" | base64 -d
echo "-----BEGIN CERTIFICATE-----\
MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\
d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\
QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\
MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\
b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\
9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\
CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\
nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\
43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\
T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\
gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\
BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\
TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\
DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\
hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\
06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\
PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\
YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\
CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\
-----END CERTIFICATE-----" | base64
echo -n "-----BEGIN CERTIFICATE-----\
MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\
d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\
QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\
MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\
b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\
9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\
CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\
nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\
43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\
T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\
gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\
BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\
TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\
DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\
hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\
06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\
PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\
YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\
CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\
-----END CERTIFICATE-----" | base64
cat Downloads/DigiCertGlobalRootCA.crt.pem
echo "cG9zdGdyZXNxbCthc3luY3BnOi8vcGdhZG1pbjpUTnFhV3NyVVRKWXBKdk5pTUVZS25ya1UyQHByZWZlY3QtcHJvZC1wc3FsZi1wcmVmZWN0LXBvc3RncmVzcWwucG9zdGdyZXMuZGF0YWJhc2UuYXp1cmUuY29tOjU0MzIvcHJlZmVjdC1wcm9kLXBzcWxmZGItcHJlZmVjdA==" | base64 -d
git commit -am "deploy prefect"
git ad
git commit -am "deploy layer 2"
cd prefect
git commit -am "add prefect"
git commit -am "app label"
cd ../../devops-cluster/bootstraps
git commit -am "fix"
kubectl create namespace test --dry-run=client -o yaml
nslookup http://grafana.devops.prod.ballastlabs.com/
nslookup grafana.devops.prod.ballastlabs.com\ 
nslookup prometheus.devops.prod.ballastlabs.com
nslookup grafana.devops.prod.ballastlabs.com
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm install my-prometheus-redis-exporter prometheus-community/prometheus-redis-exporter --version 2.0.2 --values redis-exporter.yaml
helm install prometheus-redis-exporter prometheus-community/prometheus-redis-exporter --values redis-exporter.yaml
helm install prometheus-redis-exporter prometheus-community/prometheus-redis-exporter -n kube-prometheus-stack --values redis-exporter.yaml
helm upgrade --install prometheus-redis-exporter prometheus-community/prometheus-redis-exporter -n kube-prometheus-stack --values redis-exporter.yaml
exec kubectl exec -i -t -n kube-prometheus-stack prometheus-redis-exporter-df7f9f6b4-wmrtg -c prometheus-redis-exporter -- sh -c "clear; (bash || ash || sh)"
cd ../base
cd ops-cluster
cd base
cd ../bootstraps
az account set --subscription d3407bf4-bbd1-4b7e-9525-7782a6f2337c
az aks get-credentials --resource-group ballast-prod-ops-aks-rg --name ballast-prod-ops-aks --admin --overwrite-existing
git commit -am "app kube-prometheus-stack"
kubectl get ns kube-system -o=jsonpath='{.metadata.uid}'
git commit -am "update license"
git commit -am "update name"
cd ../../../../layer1
cd topology
cd layer1/topology
cd ../../layer3/ops-cluster/storage-account/thanos
git commit -am "add storage account module"
git commit -am "update image tag"
cd infra/prod/layer1/registry
cd ops/kube-prometheus-stack/templates
kubectl create secret generic thanos-objstore-config --from-file=thanos.yaml=test.yaml
echo "8m+7x5rvEnz/q4uUS8gTkfnOd+cp8QZtGGG3VhHB9CWexobh2HQQPwOvSiswfK4Y+ozAhn8+U4Dk+ASte6oZOg==" 
echo "8m+7x5rvEnz/q4uUS8gTkfnOd+cp8QZtGGG3VhHB9CWexobh2HQQPwOvSiswfK4Y+ozAhn8+U4Dk+ASte6oZOg==" | base64 -d
az storage account keys list --account-name ballastprodthanossa --resource-group ballast-prod-thanos-sa-rg -o tsv --query "[0].value"
git 
git com
git commit -am "update thanos config"
robusta gen-config
robusta gen-config --enable-prometheus-stack
pip install -U robusta-cli --no-cache
python3 -m pip install -U robusta-cli --no-cache
python3 robusta gen-config --enable-prometheus-stack
kubectl get prometheus -o yaml | grep -A3 serviceMonitorSelector\

git commit -am "update service monitoring"
exec kubectl exec -i -t -n robusta robusta-runner-8478766c7b-t4z5n -c runner -- sh -c "clear; (bash || ash || sh)"
git commit -am "update ingress"
git commit -am "monitoring stack"
kubectl apply -f https://gist.githubusercontent.com/robusta-lab/283609047306dc1f05cf59806ade30b6/raw\

kubectl delete -f https://gist.githubusercontent.com/robusta-lab/283609047306dc1f05cf59806ade30b6/raw\

mkdir hlac
git rebase -i a71745f997617c8b5b3d16e4df0aab21d6908ad7
git commit -amend "init stack"
git rebase --continue
git rebase --edit-todo
git rebase --about
git rebase --abort
git commit --amend "init stack"
git commit --ame "init stack"
git commit --am "init stack"
git clone git@github.com:hlac9x/argocd-kustomize-helm.git
git remote set-url origin git@github.com-hoan:hlac9x/argocd-kustomize-helm.git
git gc --prune=now
git push origin --force --all
git commit -am "init stack"
git commit -am "add jenkins"
l;s
az storage account network-rule add -g ballast-prod-terraform-state-rg --account-name ballastprodtfstate --ip-address 23.45.1.0/24
echo $myip
'curl http://ipecho.net/plain; echo'
curl http://ipecho.net/plain; echo
az storage account network-rule add -g ballast-prod-terraform-state-rg --account-name ballastprodtfstate --ip-address $(curl -s http://ipecho.net/plain; echo)\

chmod +x update_storage_network_rule.sh
git commit -am "update README"
nslookup win.hlac.cloud
ping win.hlac.cloud
helm pull prefect/prometheus-prefect-exporter
git commit -am "update grafana"
export cookie_secret="$(openssl rand -hex 16)" \
echo $cookie_secret
git commit -am "add allowSnippetAnnotations"
cd ../infra
git commit -am "update ops apps"
git commit -am "update servive monitor"
git commit -am "update oauth2 procys"
git commit -am "update readiness"
ssh admin@2402:800:63e2:b09a:7c67:3b89:70e5:b49f
echo "aGxhY0BNYXJsaW5FcXVpdHkub25taWNyb3NvZnQuY29t" | base64 -d
kubectl create rolebinding argo-default-admin --clusterrole=admin --serviceaccount=argo-workflows:default -n argo-workflows --dry-run=client -o yaml
	zx
git commit -am "add argo workflow"
cd app-cluster/prefect
cd ../../app-identity/prefect
cd ../argo-workflows
git commit -am "update WI"
docker pull buildpacksio/pack
docker run buildpacksio/pack
docker run -idt buildpacksio/pack
docker run -idt buildpack buildpacksio/pack
docker run -idt --name buildpack buildpacksio/pack
git commit -am "add argo-workflow identity"
docker login ballastprodmainhub.azurecr.io -u ballastprodmainhub -p SOuD3L2MdC7PqpTBhrGFj/UNu6NXUw6/hjZzt2x31c+ACRCoMu09 
docker login --help
token=$(az acr login --name ballastprodmainhub --expose-token | jq -r '.accessToken')\

echo $token
docker pull gcr.io/buildpacks/builder:latest
echo "SOuD3L2MdC7PqpTBhrGFj/UNu6NXUw6/hjZzt2x31c+ACRCoMu09" | base64
az acr pack build --help
az account list -o table
azaz acr show -n ballastprodmainhub.azurecr.io --query ballastprodmainhub
az acr show -n ballastprodmainhub.azurecr.io --query ballastprodmainhub
az login --service-principal -u 03809f12-a491-4dc6-ac8c-1e7844512600 -p bo28Q~q93GGIFqQjBmf4FGoBwCBBXbOLd0oHRbMG --tenant 6873769a-8838-4672-94bd-f377d4e0609f
az acr show -n ballastprodmainhub --query ballastprodmainhub
az acr show -n ballastprodmainhub 
az acr show -n prefectprodcrmain
az acr show -n ballastprodmainhub
git clone git@github.com:hlac9x/prefect-helm.git
code prefect-helm
brew install pre-commit
brew reinstall pre-commit
pre-commit install
pre-commit run --all-files
git commit -am "chore(prometheus-prefect-exporter/servicemonitor): update README and values validate"
git remote set-url origin git@github.com-hoan:hlac9x/prefect-helm.git
git commit -am "chore(app): add pre-commit and helm-docs "
git commit -am "dex2"
git commit -am "remove dex2"
curl -o max-pods-calculator.sh https://raw.githubusercontent.com/awslabs/amazon-eks-ami/master/files/max-pods-calculator.sh\
chmod +x max-pods-calculator.sh
./max-pods-calculator.sh \\
--instance-type <m5.large> \\
--cni-version <1.9.x-eksbuild.y> \\
--cni-prefix-delegation-enabled 
./max-pods-calculator.sh \\
--instance-type m5.large \\
--cni-version <1.9.x-eksbuild.y> \\
--cni-prefix-delegation-enabled 
./max-pods-calculator.sh \\
--instance-type m5.large \\
--cni-version 1.9.x-eksbuild.y \\
--cni-prefix-delegation-enabled 
./max-pods-calculator.sh \\
--instance-type m5.large \\
--cni-version 1.18.1-eksbuild.y \\
--cni-prefix-delegation-enabled 
cd hlac/
code argocd-kustomize-helm
git commit -am "modify Jenkins pipeline"
git commit -am "update plugin"
curl -s http://ipinfo.io/ip
docker run --name azure-cli bitnami/azure-cli:latest
cd repos/pocketslolution/ls
cd repos/pocketslolution/
cd ballastlabs
code ballast-ui
git@ssh.dev.azure.com:v3/marlin-equity-partners/MEP/ballast-k8s
git remote set-url origin git@ssh.dev.azure.com:v3/marlin-equity-partners/MEP/ballast-ui
git pull origin main
cd ~
git commit -am "add buildpacks"
pack build ballast-ui --path . --builder heroku/builder:22 
git commit -am "update builder"
code repos/ballastlabs/ballast-orm
ls .
git commit -am "update workflow"
g[s]
git commit -am "update jenkins"
- echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json\

az acr login
cat ~/.docker/config.json
docker pull ballastprodmainhub.azurecr.io/ballast-ui:main
az acr repository list-manifests --name ballastprodmainhub --repository ballast-ui --query "[?tags[?contains(@, '$TAG')]].digest" -o tsv\

az acr repository show-manifests --name ballastprodmainhub --repository ballast-ui --query "[?tags[?contains(@, '$TAG')]].digest" -o tsv\

az acr manifest list-metadata --name ballastprodmainhub --repository ballast-ui --query "[?tags[?contains(@, '$TAG')]].digest" -o tsv\

az acr manifest list-metadata --name ballastprodmainhub  --query "[?tags[?contains(@, '$TAG')]].digest" -o tsv\

az acr manifest list-metadata \

az acr manifest list-metadata -r ballastprodmainhub\

az acr manifest list-metadata -r ballast-ui -n ballastprodmainhub \

docker pull ballastprodmainhub.azurecr.io/ballast-ui:v1
docker tag 561716ab75ad ballastprodmainhub.azurecr.io/alpine/git 
docker image ls
docker push ballastprodmainhub.azurecr.io/alpine/git
docker push ballastprodmainhub.azurecr.io/alpine/git:latest
docker tag 561716ab75ad ballastprodmainhub.azurecr.io/alpine/git:v1
docker push ballastprodmainhub.azurecr.io/alpine/git:v1
docker tag 561716ab75ad hlactest.azurecr.io/alpine:v1
az acr login -n hlactest.azurecr.io
docker push hlactest.azurecr.io/alpine:v1
cd layer1/registry/main
docker tag 561716ab75ad ballastprodmainhub.azurecr.io/alpine:v1
git commit -am "update acr"
az logout
az acr login -n ballastprodmainhub.azurecr.io
cd app-cluster
cd ../ops-cluster
cd storage-account/thanos
git commit -am "update workflows"
cd app
helm create ballast-api
cd ../charts/\ 
cd ../charts/
helm create libchart
cd ../../app
cd ballast-services
helm template -f prod-values.yaml
cd ../../charts/ballast-services/api
cd ../../../app/ballast-services
helm template . -f prod-values.yaml
cd charts/ballast-services
cd api
cd app/ballast-api
git commit -am "init ballast app"
helm repo add prefect https://prefecthq.github.io/prefect-helm\
helm repo update\
helm search repo prefect
git commit -am "update prefect"
cd ../../../layer3
cd ../../../app-cluster/base
git commit -am "add eck exporter"
git commit -am "add eck operator"
git commit -am "archive"
git commit -am "update es"
echo "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc=" | base64 -d
echo "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc=" | base64
git commit -am "deploy airflow"
cd layer2/postgresql
cd main
git commit -am "update public access"
git commit -am "deploy openmetadata"
git commit -am "fix conflict"
cd layer3/devops-cluster/bootstraps
git checkout origin README.md
mv .git/refs/remotes/origin/HEAD /tmp
git gc
git remote set-head origin --auto
git prune
git checkout ballast-dev
cd repos/ballastlabs
rm -f ballast-tf
rm -rf ballast-tf
git clone git@ssh.dev.azure.com:v3/marlin-equity-partners/MEP/ballast-tf
code ballast-tf
cd ../../app-cluster
cd bootstraps
cd ../../../
git commit -am "update branch"
curl https://openmetadata.app.prod.ballastlabs.com/api/v1/system/config/jwks
curl https://openmetadata.app.prod.ballastlabs.com/realms/myrealm/protocol/openid-connect/certs
curl https://dex.app.prod.ballastlabs.com/dex/keys
curl https://dex.app.prod.ballastlabs.com/.well-known/openid-configuration
curl https://dex.app.prod.ballastlabs.com/common/discovery/keys
vang
curl https://dex.app.prod.ballastlabs.com/key
curl https://dex.app.prod.ballastlabs.com/keys
curl https://dex.app.prod.ballastlabs.com/realms/myrealm
curl https://dex.app.prod.ballastlabs.com/realms/myrealm/protocol/openid-connect/certs
curl https://dex.app.prod.ballastlabs.com/.well-known/jwks.json
curl https://dex.app.prod.ballastlabs.com/jwks.json
curl https://dex.app.prod.ballastlabs.com/certs
curl https://dex.app.prod.ballastlabs.com/auth/realms/my-realm/protocol/openid-connect/certs
git commit -am "sso configure"
cd layer3/ops-cluster/bootstraps
pwd
git commit -am "add argo slack channel"
cd ../../app-identity/argo-workflows
terragrunt destroy --auto-approve
cd argo-workflows
git commit -am "rename"
cd argocd-image-updater
git commit -am "add argocd-image-updater"
git commit -am "update ballast apps"
git commit -am "turn off notification"
cd ../../ops-cluster/bootstraps
git commit -am "update pod labels"
cd infra/prod/layer3/app-identity/argocd-image-updater
echo "eyJhdXRocyI6eyJwcmVmZWN0cHJvZGNybWFpbi5henVyZWNyLmlvIjp7InVzZXJuYW1lIjoicHJlZmVjdHByb2Rjcm1haW4iLCJwYXNzd29yZCI6InpyZ3lMd3RxSUtvZjN6Nkg2VXNTWjVwcEQvUVZhMzdBOFZGOTRtZUJvaCtBQ1JBU0NYSUoiLCJhdXRoIjoiY0hKbFptVmpkSEJ5YjJSamNtMWhhVzQ2ZW5KbmVVeDNkSEZKUzI5bU0zbzJTRFpWYzFOYU5YQndSQzlSVm1Fek4wRTRWa1k1TkcxbFFtOW9LMEZEVWtGVFExaEpTZz09In19fQ==" | base64 -d
git commit -am "update ns"
cd ../../../layer1/registry/main
echo "cHJlZmVjdHByb2Rjcm1haW46enJneUx3dHFJS29mM3o2SDZVc1NaNXBwRC9RVmEzN0E4VkY5NG1lQm9oK0FDUkFTQ1hJSg==" | base64 -d
echo "ballastprodmainhub:cNYOf/zYB/DHmxDMm3WMAqTVEt/x8yYGAlBadsXuJq+ACRDK0uHh"
echo "ballastprodmainhub:cNYOf/zYB/DHmxDMm3WMAqTVEt/x8yYGAlBadsXuJq+ACRDK0uHh" | base64
echo -n "ballastprodmainhub:cNYOf/zYB/DHmxDMm3WMAqTVEt/x8yYGAlBadsXuJq+ACRDK0uHh" | base64
echo "YmFsbGFzdHByb2RtYWluaHViOmNOWU9mL3pZQi9ESG14RE1tM1dNQXFUVkV0L3g4eVlHQWxCYWRzWHVKcStBQ1JESzB1SGg=" | base64 -d
git commit -am "update docker secret"
]
git commit -am "update robusta playbook"

cd repos/hlac
git clone git@github.com:hlac9x/prometheus-helm-charts.git
helm template . -f values.yaml
git commit -am "deploy renovate"
git commit -am "update robusta"
git commit -am "update redis"
git commit -am "update version"
mkdir okini
git clone git clone git@github.com-okini:osallx/okini-terraform.git
git clone git@github.com:osallx/okini-terraform.git
git clone git@github.com-okini:osallx/okini-terraform.git
git clone git@github.com-okini:rosallx/okini-terraform-modules.git
git clone git@github.com-okini:palmify/okini-terraform-modules.git
code ~
rm -rf okini-terraform okini-terraform-modules
git clone git@github.com-palmify:palmify/okini-terraform-modules.git
git clone git@github.com-palmify:palmify/okini-terraform.git
git config user.email "david.jony106@gmail.com"
git commit -am "init"
cd ..
mv okini palmify
code ballastlabs/ballast-infra
cd palmify
git clone git@github.com-okini:rosallx/okini-terraform.git
git clone git@github.com-palmify:rosallx/okini-terraform.git
gpos
code ../ballastlabs/ballast-tf
cd prod/layer3/ops-cluster/bootstraps
git commit -am "update config syncer"
aws configure --profile okini
az cli --version
az version
terragrunt appl
git checkout origin/feat/aws/vpc-module
git checkout feat/terragrunt-init
cd ap-northeast-3/dev/vpc
awsconfig
git commit -am "update openmetadata"
git branch
git checkout feat/aws/vpc-module
git commit -am "init ec2 module"
cd ap-northeast-3/dev/bastion-host/security-groups
export AWS_PROFILE="okini"
git commit -am "init security-group module"
git commit -am "init key-pair"
cd ../key-pair
terragrunt state show -json
terragrunt state show 
terragrunt output
terragrunt output --ignore-sensitive
terragrunt output -raw
terraform output -raw
terraform init
terragrunt init
terraform output -raw private_key_pem
ssh ec2-13-208-251-59.ap-northeast-3.compute.amazonaws.com
ssh ec2-13-208-251-59.ap-northeast-3.compute.amazonaws.com -i ~/.ssh/okini-dev-bastion.pub
ssh ec2-user@ec2-13-208-251-59.ap-northeast-3.compute.amazonaws.com -i ~/.ssh/okini-dev-bastion.pub
cd ../ec2
aliases
reload
terragrunt run-all apply
ssh ec2-user@13.208.64.170 -i ~/.ssh/okini-dev-bastion.pub
cd bastion-host/ec2
git commit -am "update ec2 module"
cd ../../../../_global/route53/dev.okinihome.com
cd records
nslookup example.dev.okinihome.com
ssh ec2-user@15.152.0.45 -i ~/.ssh/okini-dev-bastion.pub
cd ../../../../ap-northeast-3
cd dev/s3-buckets/main
cd _global/route53
terragrunt run-all des
terragrunt run-all destroy
git remote set-url origin git@github.com-palmify:palmify/okini-terraform.git
cd ../\ 
git commit -am "init modules"
ssh ec2-user@bastion.dev.okinihome.com -i ~/.ssh/okini-dev-bastion.pub
code ~/.config/git/config
git commit -am "feat(openmetadata): add test"
git commit -am "feat(openmetadata): update azure sso"
git commit -am "feat(external-ingress): init"
telnet 172.181.50.241 443
aws ec2-instance-connect ssh --instance-id i-0ae625316afc8d311
aws ec2-instance-connect ssh --instance-id i-0ae625316afc8d311 --profile okini
ssh ec2-user@i-0ae625316afc8d311 \\
    -i ~/.ssh/okini-dev-bastion.pub \\
    -o ProxyCommand='aws ec2-instance-connect open-tunnel \\
    --instance-id %h'
ssh ec2-user@i-0ae625316afc8d311 -i ~/.ssh/okini-dev-bastion.pub -o ProxyCommand='aws ec2-instance-connect open-tunnel --instance-id %h --profile okini
ssh ec2-user@i-0ae625316afc8d311 -i ~/.ssh/okini-dev-bastion.pub -o ProxyCommand='aws ec2-instance-connect open-tunnel --instance-id %h' --profile okini
ssh ec2-user@i-0ae625316afc8d311 -i ~/.ssh/okini-dev-bastion.pub -o ProxyCommand='aws ec2-instance-connect open-tunnel --instance-id %h' 
ssh ec2-user@i-0ae625316afc8d311 -i "~/.ssh/okini-dev-bastion.pub" -o ProxyCommand="aws ec2-instance-connect open-tunnel --instance-id %h"
ssh ec2-user@i-0ae625316afc8d311 -i "~/.ssh/okini-dev-bastion.pub" -o ProxyCommand="aws ec2-instance-connect open-tunnel --instance-id %h --profile okini" 
ssh -i GATEWAY_KEY.pem -N -L 33389:USERNAME@WINDOWS_SERVER_PRIVATE_IP:3389
ssh ec2-user@bastion-dev.okinihome.com -i ~/.ssh/okini-dev-bastion.pub
nslookup bastion.dev.okinihome.com
telnet 10.0.14.174 22
aws sts get-caller-identity
aws sts get-caller-identity --profile okini
aws eks update-kubeconfig --region ap-northeast-3 --name okini-eks-cluster-dev --profile okini
cd ../../security-group
cd bastion-host/
cd ap-northeast-3/dev/ec2/bastion-host
ssh-keygen -R bastion-dev.okinihome.com
ping google.com
ping 10.0.0.140
traceroute 10.0.0.26
telnet 10.0.1.131 443
telnet 10.0.0.26 51820
nslookup 33D9357C2CCCFB53DE26F98BBB5C428A.sk1.ap-northeast-3.eks.amazonaws.com
ssh ubuntu@bastion-dev.okinihome.com -i ~/.ssh/okini-dev-bastion.pub
telnet 10.0.0.2 51820
ping 10.0.0.26
telnet 10.0.0.2 22
telnet 10.0.0.26 22
git commit -am "chore(ec2/bastion): update ec2 configure"
cd ../../../dev/acm
git commit -am "feat: add ACM module "
cd dev/eks/cluster-bootstrap
terragrunt apply
kubectl create ns test
git commit -am "feat(cluster-bootstraps): add external-secrets module"
docker push ballastprodmainhub.azurecr.io/alpine:v1
nslookup _551d646c9e8f394026e3443336f05d18.okinihome.com.okinihome.com
nslookup _551d646c9e8f394026e3443336f05d18.okinihome.com.
nslookup _551d646c9e8f394026e3443336f05d18.okinihome.com
nslookup _551d646c9e8f394026e3443336f05d18.okinihome.com 1.1.1.
nslookup _551d646c9e8f394026e3443336f05d18.okinihome.com 1.1.1.1
nslookup _551d646c9e8f394026e3443336f05d18.okinihome.com 
aws eks update-kubeconfig --region ap-northeast-3 --name okini-eks-main-dev --profile okini
aws eks update-kubeconfig --region ap-northeast-3 --name okini-eks-main-dev --profile okini --context okini-eks-main-dev
aws eks update-kubeconfig --region ap-northeast-3 --name okini-eks-main-dev --profile okini --context-name okini-eks-main-dev
nslookup okini-alb-external-683951439.ap-northeast-3.elb.amazonaws.com
vim /etc/hosts
cd ../cluster
cd ../cluster-bootstrap
git commit -am "feat(cluster-bootstraps): add aws-load-balancer-controller"
git commit -am "feat(cluster-bootstraps): add argocd"
git commit -am "feat(cluster-bootstraps): add bootstrap modules"
git commit -am "feat(nginx): install external secret"
git commit -am "feat(nginx): update"
git commit -am "feat(cluster-bootstraps): update wildcard cert"
cd infra/prod/layer3/ops-cluster/bootstraps
git commit -am "feat(meltwater): add openmetadata stack"
cd ../../app-cluster/bootstraps
git commit -am "feat(meltwater): update nginx-ingress"
git commit -am "feat(meltwater): openmetadta"
nslookup http://openmetadata.ballastlabs.com/
nslookup openmetadata.ballastlabs.com
nslookup openmetadata.ballastlabs.com 1.1.1.1
nslookup openmetadata-dev.ballastlabs.com 1.1.1.1
git commit -am "feat(meltwater): nginx"
npm i -g alacritty-themes
git clone git@github.com-palmify:rosallx/okini-k8s.git
nslookup argocd-dev.okinihome.com 
aws eks update-kubeconfig --region ap-northeast-3 --name okini-eks-main-prod --profile okini --context-name okini-eks-main-prod
traceroute 10.1.1.225
traceroute 10.1.2.67
aws eks update-kubeconfig --region ap-northeast-3 --name okini-eks-main-prod --profile okini 
ssh ubuntu@bastion-prod.okinihome.com -i ~/.ssh/okini-bastion-prod.pub
sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder
kubectl get nodes
kubectl get pods
cd ap-northeast-3/prod/ec2/bastion-host
ssh-keygen -R bastion.okinihome.com
cd ../../eks/main/cluster-bootstrap
git clone git@github.com-palmify:palmify/okini-k8s.git
git log -p 
cd ap-northeast-3/dev/eks/main/cluster-bootstrap
export KUBE_CONFIG_PATH=~/.kube/config
git commit -am "feat(argo-app): add"
git commit -am "update"
git commit -am "update apps"
git commit -am "add the new domain"
nslookup bastion.okinihome.com
nslookup bastion-dev.okinihome.com
git checkout -b hoan-test
git gps
git branch -f hoantest
git branch -f hoan-test
git branch --force-create hoan-test
git branch --force-create 
git push --force
git switch -C hoan-test origin/hoan-test~n
git switch -C hoan-test origin/hoan-test
git switch -C hoan-test origin/main
git checkout master
git switch --orphan hoantest
git push -u origin hoantest
git checkout -b main
git push
git commit --allow-empty -m "Initial commit on orphan branch"
git commit -am "Initial commit branch"
git commit -am "update repo"
cd okini
cd okini-api
git add . .
cd okini/okini-api
cd ../../charts/okini-services/libchart
git commit -am "feat(chart): init"
git commit -m "feat(chart): init"
git commit -am "update .gitignore "
cd ../../
cd okini-k8s
got
cd okini/okini-pms-web/
cd ../.
git commit -am "chore: update helm values"
docker pull 637423287980.dkr.ecr.ap-northeast-3.amazonaws.com/okini-api
git commit -am "chore: correct airflow endpoint"
git commit -am "chore: update airflow config"
git commit -am "chore: update airglow config"
git commit -am "chore: update es config"
nslookup app.okinihome.com
git clone git@github.com-palmify:palmify/okini-api.git
git clone git@github.com-palmify:palmify/okini-pms-web .git
code okini-api
code okini-k8s
Æ°
git commit -am "chore: update db config"
nslookup hlac.cloud
nslookup dev.devops.hlac.cloud 1.1.1.1
nslookup hlac.cloud 1.1.1.1
nslookup okini-services-ext-dev-1814378228.ap-northeast-3.elb.amazonaws.com
nslookup mikihu.com.vn 1.1.1.1
nslookup  okini-services-ext-prod-1309775970.ap-northeast-3.elb.amazonaws.com
nslookup okinihome.com 8.8.8.8
git commit -am "chore: update backend env"
ssh ubuntu@13.208.187.159 -i ~/.ssh/okini-bastion-dev.pub
nslookup dev.okinihome.com 
git commit -am "chore: update ingress"
git clone git@github.com-palmify:palmify/okini-pms-web.git
code okini-pms-web
git branch 
git branch origin
brew install mysql
which mysql
cd repos
cd hlac
code prometheus-helm-charts
git reset --hard 
git checkout values.yaml
git commit -am "[prometheus-elasticsearch-exporter]: Prevent Duplicate Labels in ServiceMonitor"
git remote get-url origin
git remote set-url origin git@github.com-hoan:hlac9x/prometheus-helm-charts.git
git commit -s -am "[prometheus-elasticsearch-exporter]: Prevent Duplicate Labels in ServiceMonitor"
git rebase --interactive HEAD~2
git commit -s --help
git commit -s
git commit -s f930911f874d496055da71ec69a0089e393828cd
git commit --signoff --message 'This is my commit message'
git reset --hard 96c694aa
git reset 
git checkout origin/main
git reset --hear
git reset --head
git commit -am "[prometheus-elasticsearch-exporter]: bump chart version"
git rebase HEAD~2 --signoff
git push --force-with-lease origin main
cd okini/okini-services
helm template . -f dev-values.yaml > temp
git commit -am "feat: deploy api-prod"
git commit -am "feat: deploy pms-prod"
git commit -am "chore: remove unnecssary vars"
cd okini/okini-pms-web
helm template . -f prod-values.yaml > temp
helm dependency update
helm dependency update && helm template . -f prod-values.yaml > temp
git commit -am "chore: update helm charts default values"
nslookup okinihome.com 
git commit -am "chore: update ingress host name"
git commit -am "chore: add new db"
git commit -am "chore: add extra permission"
git commit -am "chore: add podlabel"
git commit -am "chore: add baseJobTemplate"
git
git commit -am "chore: update openmatadta endpoint"
git commit -am "chore: remove some chart"
git commit -am "chore: remove dashboard"
cd scripts
git commit -am "chore: update job template"
./update_storage_network_rule.sh
ssh ubuntu@bastion-dev.okinihome.com -i ~/.ssh/okini-bastion-dev.pub
git commit -am "chore: update prod bucket"
ssh ubuntu@bastion.okinihome.com -i ~/.ssh/okini-bastion-prod.pub
telnet 13.250.37.115 8080
git checkout set-up-deploy-pro
git commit -am "chore: update env"
git commit -am "chore: deploy to prod"
curl api.okinihome.com
curl api.okinihome.com 8080
curl api.okinihome.com 
sudo /etc/hosts
curl api.okinihome.com 80
curl api.okinihome.com 443
curl https://api.okinihome.com 443
curl https://api.okinihome.com
curl https://api.okinihome.com/pms
curl https://api.okinihome.com/pms/api
git commit -am "chore: expose backend api"
git commit -am "chore: update port"
cd charts/prometheus-elasticsearch-exporter
helm template . -f values.yaml > temp\ 
helm template . -f values.yaml > temp
git commit -s 
git commit -s -am "[prometheus-elasticsearch-exporter]: follows the new Helm Standard Labels recommendations"
git cherry-pick -x f306525 
git cherry-pick -x -m f3065254853c111918d999481a7c38b8dd5a4d65
git cherry-pick -x b9fb1cb
git cherry-pick -x 0b97c93ad10454cc34613ae347ef1bd021fa9777
git cherry-pick -x f3065254853c111918d999481a7c38b8dd5a4d65
git commit -am "chore: update"
gp
git commit -am "chore: update openmetadata"
exec kubectl exec -i -t -n meltwater-airflow meltwater-airflow-web-778d68ddbc-6t5gn -c airflow-web -- sh -c "clear; (bash || ash || sh)"
git commit -am "chore: update airflow"
git checkout -b feat-GHA-release-please
git tag -d v0.0.0
git push -d 07ebca0868a10df3ba16d3657c7cf57d0ca73559
git push origin --delete 07ebca0868a10df3ba16d3657c7cf57d0ca73559
git push origin --delete refs/tags/v0.0.0
git push origin --delete refs/tags/vv0.1.3
git describe --tags `git rev-list --tags --max-count=0` 
git describe --tags `git rev-list --tags --max-count=1` 
git describe --tags 
git describe --tags `git rev-list --tags --max-count=0`
git describe --tags `git rev-list --tags --max-count=2`
git describe --tags `git rev-list --tags --max-count=1`
git rev-list -
git rev-list --tags
git ls-remote --tags
git ls-remote --tags  --max-count=1
git ls-remote --tags  
git commit -am "feat: create release pipeline"
git commit -am "feat: increse es resource"
kubectl drain aks-metadata310-19814565-vmss000005 --delete-local-data --ignore-daemonsets --force
git commit -am "feat: increse node size"
nslookup argocd-dev.okinihome.com 8.8.8.8
telnet argocd-dev.okinihome.com 443
git checkout main
git checkout prod
cd repos/palmify
git clone git@github.com-palmify:palmify/okini-web.git
code okini-web
git add .
git config user.name "Hoan"
git config user.email "david.jony106@gmail.com"\

git config user.name "Hoan"\
âƒ½¯ git config user.email "david.jony106@gmail.com"
git config user.name "Hoan"\
git config user.email "david.jony106@gmail.com"
git commit -am "feat: add release-please pipeline"
code okini-terraform-modules
nslookup prometheus-dev.okinihome.com
telnet argocd.okinihome.com 443
code okini-terraform
find . -type d -name ".terragrunt-cache" -prune -exec rm -rf {} \; && find . -type f -name ".terraform.lock.hcl" -prune -exec rm -rf {} \; 
cd ap-northeast-3/prod/eks/main/cluster-bootstrap
git commit -am "feat: init monitoring stack"
curl -X GET -H "Authorization: sso-key 3mM44UdBzSwDiT_RRfWQ1iPViSYg8oAGMkWbT:NrapygasF8jbmW9Y7T9jJS" "https://api.godaddy.com/v1/domains"
curl -X GET -H "Authorization: sso-key 3mM44UdBzSwDiT_RRfWQ1iPViSYg8oAGMkWbT:NrapygasF8jbmW9Y7T9jJS" "https://api.godaddy.com/v1/domains/available?domain=okinihome.com"
curl -X GET -H "Authorization: sso-key NrapygasF8jbmW9Y7T9jJS:3mM44UdBzSwDiT_RRfWQ1iPViSYg8oAGMkWbT" "https://api.godaddy.com/v1/domains/available?domain=okinihome.com"
cd ../
code ballastlabs/ballast-k8s
code ballastlabs/ballast-tf
git commit -am "feat: init external-secret"
git reset --hard
curl -X GET -H "Authorization: sso-key 3mM44UdBzSwDiT_PFeBcKP8KHhhHiPCcffECi:Sf9ntzR3TH5bg27BjB9fBY" "https://api.godaddy.com/v1/domains/available?domain=okinihome.com"
git commit -am "feat: update openmetadata config"
curl -H 'Authorization: sso-key 3mM44UdBzSwDiT_PFeBcKP8KHhhHiPCcffECi:Sf9ntzR3TH5bg27BjB9fBY' -H 'Content-Type: application/json' https://api.godaddy.com/v1/domains/available?domain=okinihome.com'
curl -H "Authorization: sso-key 3mM44UdBzSwDiT_PFeBcKP8KHhhHiPCcffECi:Sf9ntzR3TH5bg27BjB9fBY" -H "Content-Type: application/json" https://api.godaddy.com/v1/domains/available?domain=okinihome.com
curl -H "Authorization: sso-key 3mM44UdBzSwDiT_PFeBcKP8KHhhHiPCcffECi:Sf9ntzR3TH5bg27BjB9fBY" -H "Content-Type: application/json" "https://api.godaddy.com/v1/domains/available?domain=okinihome.com"
code repos/ballastlabs/ballast-infra
terragrunt plan
telnet bastion.okinihome.com 51820
git commit -am "feat: update openmetadata version"
nslookup okini-services-ext-prod-393284229.ap-northeast-3.elb.amazonaws.com
code repos/palmify/okini-k8s
code repos/palmify/okini-api
git checkout   develop-java 
git log --all -- buildbackend
git log --all -- build-backend-yaml
git log --all -- build-backend.yaml
code repos/palmify/okini-pms-web
git checkout develop-new
git commit -am "chore: remove k8s-deploy "
git commit -am "chore: remove k8s-pipeline"
git checkout test
code repos/ballastlabs/prefect-server-infrastructure
az login
git commit -am "chore: init alertmanager"
git pull --rebase
kubeconfig
terraform plan
git commit -am "chore: update db secrets"
git commit -am "chore: update alert rules"
terraform apply
cd infra/prod/layer3/app-cluster/base
terragrunt apply --auto-approve
git add . Æ°
kx
kubectl run hazelcast-client --image=hazelcastguides/hazelcast-client
kubectl run hazelcast-client --image=hazelcastguides/hazelcast-client -n okini-api
git commit -am "feat: init hazelcast operator"
nslookup https://uptime-dev.okinihome.com/
nslookup argocd-dev.okinihome.com
nslookup uptime-dev.okinihome.com
nslookup internal-okini-services-int-dev-1893616433.ap-northeast-3.elb.amazonaws.com
gs
nslookup argocd.okinihome.com
sudo vim /etc/hosts
git commit -am "feat: init uptime-kuma"
nslookup uptime.okinihome.com
code repos/ballastlabs/ballast-k8s
code repos/ballastlabs/ballast-tf
git commit -am "feat: init wireguard"
az account get-access-token --resource-type ms-graph | jq -r ".accessToken
az account get-access-token --resource-type ms-graph | jq -r ".accessToken"
telnet 10.76.122.73 51820
telnet 10.76.122.73 
telnet 4.236.21.227 
telnet 4.236.21.227 80
telnet 4.236.21.227 51820
export CLIENT_PUBLIC_KEY=5x3C3CKALZRZr71ZsRxkMTommGmaaxM0Dd1ImHTTTVA=
echo $CLIENT_PUBLIC_KEY
ACCESS_TOKEN=$(az account get-access-token --resource-type ms-graph | jq -r ".accessToken")
echo $ACCESS_TOKEN
SERVER_PUBLIC_IP=4.236.21.227
echo $SERVER_PUBLIC_IP
curl -s -X POST "http://$SERVER_PUBLIC_IP/add" -d "{\"access_token\":\"$ACCESS_TOKEN\",\"public_key\":\"$CLIENT_PUBLIC_KEY\"}"
curl -s -X POST "http://4.236.21.227/add" -d "{\"access_token\":\"$ACCESS_TOKEN\",\"public_key\":\"$CLIENT_PUBLIC_KEY\"}"
nslookup okinihome.okinihome.com
nslookup pms-dev.okinihome.com
git commit -am "chore: update cÃ²nig"
git commit -am "chore: update config"
ssh azure_vm@74.225.151.55
ssh -i ~/.ssh/id_rsa.pem azure_vm@74.225.151.55
sshconfig
ssh -i ~/.ssh/azure.pub azure_vm@74.225.151.55
ssh -i ~/.ssh/azure.pub azure_vm@4.213.65.208
ssh -i ~/.ssh/azure.pub azure_vm@74.225.151.55\

g
git commit -am "chore: pause meltwater service"
./scripts/update_storage_network_rule.sh
git commit -am "feat: init install lacework agent"
terragrunt apply 
git commit -am "chore: upsize retention"
gpw
exec kubectl exec -i -t -n wireguard wireguard-96c5bd4db-vlzmk -c wireguard -- sh -c "clear; (bash || ash || sh)"
gos
exec kubectl exec -i -t -n wireguard wireguard-75c545665-w24lf -c wireguard -- sh -c "clear; (bash || ash || sh)"
nslookup wg.ops.prod.ballastlabs.com
cat /etc/hosts
nslookup ballast-prod-main-pgsql-flexible.postgres.database.azure.com
git commit -am "install wg"
git add . 
git commit -am "move archive"
git commit -am "chore: update version"
git commit -am "chore: remove event"
gps
brew tap teamookla/speedtest
brew update
ping 8.8.8.8
myip
clear
ping
ping vnexpress.net
brew install speedtest --force
nslookup okinihome.com
nslookup pms.okinihome.com
tccutil reset All com.surteesstudios.Bartender;
sudo tccutil reset Accessibility
sudo tccutil reset Screen 
tccutil reset All 
speedtest
git pull
hostname
make /run/current-system/sw/bin/darwin-rebuild
make /nix
make update
dscl . list /groups
dscl / -create /Users/_nixbld1 PrimaryGroupID nixbld
ls /Local/Users/
sudo dscl . -create /Users/_nixbld1
s
dscl . list /users
id _nixbld1
sudo dscl . -append /Groups/nixbld GroupMembership _nixbld1\

id _nixbld1\

sudo dscl . -create /Users/_nixbld1 UniqueID 501
sudo dscl . -create /Users/_nixbld1 PrimaryGroupID 1000
sh <(curl -L https://nixos.org/nix/install)
tailscale 
code
make
make build
curl -L https://nixos.org/nix/install | sh
sudo mv /etc/zshrc.backup-before-nix /etc/zshrc\
sudo mv /etc/bashrc.backup-before-nix /etc/bashrc\
sudo mv /etc/bash.bashrc.backup-before-nix /etc/bash.bashrc\

sudo launchctl unload /Library/LaunchDaemons/org.nixos.nix-daemon.plist\
sudo rm /Library/LaunchDaemons/org.nixos.nix-daemon.plist\
sudo launchctl unload /Library/LaunchDaemons/org.nixos.darwin-store.plist\
sudo rm /Library/LaunchDaemons/org.nixos.darwin-store.plist\

sudo dscl . -delete /Groups/nixbld\
for u in $(sudo dscl . -list /Users | grep _nixbld); do sudo dscl . -delete /Users/$u; done\

sudo vifs
sudo rm /etc/synthetic.conf
sudo rm -rf /etc/nix /var/root/.nix-profile /var/root/.nix-defexpr /var/root/.nix-channels ~/.nix-profile ~/.nix-defexpr ~/.nix-channels\

sudo diskutil apfs deleteVolume /nix\

diskutil list\

/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
(echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> /Users/hoanlac/.zprofile\
    eval "$(/opt/homebrew/bin/brew shellenv)"
brew uninstall --cask alacritty
brew install --cask alacritty
cide
code 
git clone --depth 1 https://github.com/zdharma-continuum/zinit.git $HOME/.zsh/zinit && exec zsh
brew
zinit ice depth=1 atload="source $HOME/.p10k.zsh"
zinit light romkatv/powerlevel10k
brew upgrade
code macos-setup-nix
ls
code .
git config status.showUntrackedFiles no
git status
source $HOME/.zsh/zinit/zinit.zsh
: 1721185249:0;fzf
: 1721185289:0;source $HOME/.zsh/zinit/zinit.zsh \\
    || (git clone --depth 1 https://github.com/zdharma-continuum/zinit.git $HOME/.zsh/zinit && exec zsh)
: 1721185300:0;# Plugin manager\
source $HOME/.zsh/zinit/zinit.zsh \\
    || (git clone --depth 1 https://github.com/zdharma-continuum/zinit.git $HOME/.zsh/zinit && exec zsh)\
\
# Theme\
zinit ice depth=1 atload="source $HOME/.p10k.zsh"\
zinit light romkatv/powerlevel10k\
\
# Plugin list\
zinit wait lucid light-mode depth=1 nocd for \\
    atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" zdharma-continuum/fast-syntax-highlighting \\
    atload='_zsh_autosuggest_start' zsh-users/zsh-autosuggestions \\
    atload='export KEYTIMEOUT=1; MODE_CURSOR_VIINS="bar"; vim-mode-cursor-init-hook' softmoth/zsh-vim-mode \\
    Aloxaf/fzf-tab \\
    hlissner/zsh-autopair\
zinit wait lucid is-snippet for \\
    https://github.com/ahmetb/kubectl-aliases/blob/master/.kubectl_aliases \\
    https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh \\
    atload='GLOBALIAS_FILTER_VALUES=(z)' https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/globalias/globalias.plugin.zsh \\
    as='completion' https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker\
\
\
# Options\
setopt \\
    autocd \\
    autopushd \\
    histignorealldups \\
    histignorespace \\
    sharehistory\
\
# Disable right prompt indent\
ZLE_RPROMPT_INDENT=0\
\
# History\
HISTFILE=$HOME/.zsh_history\
# HISTSIZE=10000\
# SAVEHIST=10000\
\
# Aliases\
source $HOME/.aliases\
\
# Bindkeys\
bindkey "[D" backward-word\
bindkey "[C" forward-word\
bindkey "^[a" beginning-of-line\
bindkey "^[e" end-of-line\

: 1721185307:0;zinit wait lucid light-mode depth=1 nocd for \\
    atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" zdharma-continuum/fast-syntax-highlighting \\
    atload='_zsh_autosuggest_start' zsh-users/zsh-autosuggestions \\
    atload='export KEYTIMEOUT=1; MODE_CURSOR_VIINS="bar"; vim-mode-cursor-init-hook' softmoth/zsh-vim-mode \\
    Aloxaf/fzf-tab \\
    hlissner/zsh-autopair\
zinit wait lucid is-snippet for \\
    https://github.com/ahmetb/kubectl-aliases/blob/master/.kubectl_aliases \\
    https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh \\
    atload='GLOBALIAS_FILTER_VALUES=(z)' https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/globalias/globalias.plugin.zsh \\
    as='completion' https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker
: 1721185311:0;fzf
: 1721185317:0;brew install fzf
: 1721185350:0;git add .zsh_history
: 1721185352:0;git status
: 1721185399:0;git commit -am "chore: update"
